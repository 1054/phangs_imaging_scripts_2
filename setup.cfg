[metadata]
name = phangs_imaging_pipeline
author = PHANGS Collaboration
author_email =
license = Other
license_file = licenses/LICENSE.rst
url = https://github.com/akleroy/phangs_imaging_scripts
description = A CASA pipeline to process and image calibrated radio interferometry data.
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = akleroy/phangs_imaging_scripts

[options]
zip_safe = False
packages = find:
setup_requires = setuptools_scm
install_requires =
    numpy # needs lock to py36 compatible version
    spectral_cube  # needs lock to py36 compatible version
    casatools
    casatasks
    casaplotms
    casaviewer
    almatasks
    casampi
    casashell
    casadata
    casampi
    casaplotserver


[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
phangs_imaging_pipeline = data/*

[tool:pytest]
testpaths = "phangs_imaging_pipeline" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    phangs_imaging_pipeline/_astropy_init*
    phangs_imaging_pipeline/conftest.py
    phangs_imaging_pipeline/*setup_package*
    phangs_imaging_pipeline/tests/*
    phangs_imaging_pipeline/*/tests/*
    phangs_imaging_pipeline/extern/*
    phangs_imaging_pipeline/version*
    */phangs_imaging_pipeline/_astropy_init*
    */phangs_imaging_pipeline/conftest.py
    */phangs_imaging_pipeline/*setup_package*
    */phangs_imaging_pipeline/tests/*
    */phangs_imaging_pipeline/*/tests/*
    */phangs_imaging_pipeline/extern/*
    */phangs_imaging_pipeline/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
